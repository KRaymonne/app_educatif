import mongoose from 'mongoose';
import { config } from '../config';
import { connectDatabase, clearDatabase } from '../config/database';
import { User } from '../models/User';
import { Poem } from '../models/Poem';
import { Reading } from '../models/Reading';
import { Favorite } from '../models/Favorite';
import { Progress } from '../models/Progress';

/**
 * Script pour peupler la base de donn√©es avec des donn√©es de test
 */
const seedDatabase = async (): Promise<void> => {
  try {
    console.log('üå± D√©but du peuplement de la base de donn√©es...');

    // Connexion √† la base de donn√©es
    await connectDatabase();

    // Nettoyer la base de donn√©es existante
    if (config.NODE_ENV === 'development') {
      console.log('üßπ Nettoyage de la base de donn√©es...');
      await clearDatabase();
    }

    // Cr√©er des utilisateurs de test
    console.log('üë• Cr√©ation des utilisateurs...');
    const users = await User.insertMany([
      {
        email: 'admin@app-educatif.com',
        password: 'admin123',
        name: 'Administrateur',
        role: 'admin',
        level: 'Avanc√©',
        isActive: true
      },
      {
        email: 'teacher@app-educatif.com',
        password: 'teacher123',
        name: 'Marie Dubois',
        role: 'teacher',
        level: 'Avanc√©',
        classId: 'CM2-A',
        isActive: true
      },
      {
        email: 'emma.martin@student.com',
        password: 'student123',
        name: 'Emma Martin',
        role: 'student',
        level: 'D√©butant',
        classId: 'CM2-A',
        isActive: true
      },
      {
        email: 'lucas.bernard@student.com',
        password: 'student123',
        name: 'Lucas Bernard',
        role: 'student',
        level: 'Interm√©diaire',
        classId: 'CM2-A',
        isActive: true
      },
      {
        email: 'sophie.martin@student.com',
        password: 'student123',
        name: 'Sophie Martin',
        role: 'student',
        level: 'Avanc√©',
        classId: 'CM2-B',
        isActive: true
      }
    ]);

    console.log(`‚úÖ ${users.length} utilisateurs cr√©√©s`);

    // Cr√©er des po√®mes de test
    console.log('üìö Cr√©ation des po√®mes...');
    const poems = await Poem.insertMany([
      {
        title: "Le Jardin Enchant√©",
        author: "Henri Dubois",
        content: `Dans un jardin secret, cach√© du monde,
Poussent des fleurs aux couleurs profondes.
Les roses parlent aux papillons,
Les arbres chantent de douces chansons.

Ici le temps s'arr√™te et sourit,
Les r√™ves prennent vie, tout s'√©panouit.
C'est un lieu magique o√π l'√¢me se pose,
Un jardin enchant√© aux mille roses.`,
        theme: "Nature",
        level: "debutant",
        difficulty: "facile",
        durationMinutes: 2,
        description: "Un po√®me magique sur un jardin o√π poussent des √¢mes...",
        tags: ["nature", "magie", "jardin", "fleurs"],
        createdBy: users[1]._id, // Teacher
        readCount: 15,
        averageScore: 85
      },
      {
        title: "L'Oiseau Voyageur",
        author: "Pierre Martin",
        content: `Haut dans le ciel bleu azur,
Un oiseau vole, libre et s√ªr.
Il traverse monts et vall√©es,
D√©couvre des terres cach√©es.

Ses ailes portent tous ses r√™ves,
Son chant r√©sonne, jamais ne s'ach√®ve.
Voyageur des quatre saisons,
Il nous enseigne ses le√ßons.

La libert√© n'a pas de fronti√®res,
Comme cet oiseau dans les airs.
Suivons son exemple chaque jour,
Et volons vers notre amour.`,
        theme: "Aventure",
        level: "intermediaire",
        difficulty: "moyen",
        durationMinutes: 4,
        description: "Suivez le voyage d'un oiseau curieux √† travers les nuages...",
        tags: ["aventure", "libert√©", "voyage", "oiseau"],
        createdBy: users[1]._id,
        readCount: 8,
        averageScore: 78
      },
      {
        title: "Mon Meilleur Ami",
        author: "Sophie Laurent",
        content: `J'ai un ami, le plus fid√®le,
Qui ne me quitte jamais, c'est merveilleux.
Quand je suis triste, il me console,
Quand je ris, il rit avec moi.

Nous partageons tous nos secrets,
Nos jeux, nos rires, nos projets.
Ensemble nous sommes plus forts,
L'amiti√© est notre tr√©sor.

Peu importe les ann√©es qui passent,
Notre lien jamais ne se casse.
Car un vrai ami, c'est pr√©cieux,
C'est le plus beau des cadeaux.`,
        theme: "Amiti√©",
        level: "debutant",
        difficulty: "facile",
        durationMinutes: 3,
        description: "Une belle histoire d'amiti√© entre deux enfants ins√©parables...",
        tags: ["amiti√©", "fid√©lit√©", "partage", "enfance"],
        createdBy: users[1]._id,
        readCount: 22,
        averageScore: 92
      },
      {
        title: "Le Ch√¢teau de Nuages",
        author: "Antoine Rousseau",
        content: `Au-dessus des montagnes hautes,
Flotte un ch√¢teau fait de nuages.
Ses tours touchent les √©toiles,
Ses murs brillent comme des voiles.

Dans ce palais a√©rien,
Vivent des princes magiciens.
Ils tissent des r√™ves dor√©s,
Pour tous les enfants endorm√©s.

Quand la nuit tombe doucement,
Le ch√¢teau danse dans le vent.
Et si tu regardes bien le ciel,
Tu verras ce monde irr√©el.

Ferme les yeux et tu pourras,
Visiter ce ch√¢teau-l√†.
Car dans nos r√™ves les plus fous,
Tout devient possible pour nous.`,
        theme: "Imagination",
        level: "avance",
        difficulty: "difficile",
        durationMinutes: 6,
        description: "Un ch√¢teau myst√©rieux flotte dans les nuages...",
        tags: ["imagination", "r√™ve", "magie", "ch√¢teau"],
        createdBy: users[1]._id,
        readCount: 5,
        averageScore: 88
      },
      {
        title: "La Danse des Saisons",
        author: "Claire Moreau",
        content: `Le printemps arrive en dansant,
Avec ses fleurs et son chant.
L'√©t√© suit avec sa chaleur,
Apportant joie et bonheur.

L'automne peint les feuilles d'or,
Offre ses fruits comme un tr√©sor.
L'hiver endort la nature,
Sous son manteau blanc et pur.

Chaque saison a sa beaut√©,
Sa propre personnalit√©.
Ensemble elles forment l'ann√©e,
Dans une ronde enchant√©e.`,
        theme: "Nature",
        level: "intermediaire",
        difficulty: "moyen",
        durationMinutes: 3,
        description: "Un voyage po√©tique √† travers les quatre saisons...",
        tags: ["saisons", "nature", "cycle", "beaut√©"],
        createdBy: users[1]._id,
        readCount: 12,
        averageScore: 81
      }
    ]);

    console.log(`‚úÖ ${poems.length} po√®mes cr√©√©s`);

    // Cr√©er des lectures de test
    console.log('üìñ Cr√©ation des lectures...');
    const readings = [];
    
    // Emma lit plusieurs po√®mes
    readings.push(
      {
        userId: users[2]._id, // Emma
        poemId: poems[0]._id, // Le Jardin Enchant√©
        score: 89,
        durationSeconds: 125,
        completed: true,
        feedback: "Excellente lecture ! Bonne prononciation.",
        mistakes: [
          { word: "profondes", position: 15, type: "pronunciation", severity: "low" }
        ],
        sessionData: {
          startTime: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000), // Il y a 7 jours
          endTime: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000 + 125000),
          pauseCount: 1,
          totalPauseTime: 5
        }
      },
      {
        userId: users[2]._id, // Emma
        poemId: poems[2]._id, // Mon Meilleur Ami
        score: 92,
        durationSeconds: 180,
        completed: true,
        feedback: "Tr√®s belle expression ! Continue comme √ßa.",
        mistakes: [],
        sessionData: {
          startTime: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000), // Il y a 5 jours
          endTime: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000 + 180000),
          pauseCount: 0,
          totalPauseTime: 0
        }
      }
    );

    // Lucas lit d'autres po√®mes
    readings.push(
      {
        userId: users[3]._id, // Lucas
        poemId: poems[1]._id, // L'Oiseau Voyageur
        score: 78,
        durationSeconds: 245,
        completed: true,
        feedback: "Bon travail ! Attention √† la fluidit√©.",
        mistakes: [
          { word: "azur", position: 8, type: "pronunciation", severity: "medium" },
          { word: "fronti√®res", position: 45, type: "fluency", severity: "low" }
        ],
        sessionData: {
          startTime: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000), // Il y a 3 jours
          endTime: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000 + 245000),
          pauseCount: 2,
          totalPauseTime: 15
        }
      },
      {
        userId: users[3]._id, // Lucas
        poemId: poems[4]._id, // La Danse des Saisons
        score: 85,
        durationSeconds: 195,
        completed: true,
        feedback: "Am√©lioration notable ! Bonne intonation.",
        mistakes: [
          { word: "personnalit√©", position: 32, type: "pronunciation", severity: "low" }
        ],
        sessionData: {
          startTime: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000), // Il y a 1 jour
          endTime: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000 + 195000),
          pauseCount: 1,
          totalPauseTime: 8
        }
      }
    );

    await Reading.insertMany(readings);
    console.log(`‚úÖ ${readings.length} lectures cr√©√©es`);

    // Cr√©er des favoris
    console.log('‚≠ê Cr√©ation des favoris...');
    const favorites = await Favorite.insertMany([
      {
        userId: users[2]._id, // Emma
        poemId: poems[2]._id  // Mon Meilleur Ami
      },
      {
        userId: users[2]._id, // Emma
        poemId: poems[3]._id  // Le Ch√¢teau de Nuages
      },
      {
        userId: users[3]._id, // Lucas
        poemId: poems[1]._id  // L'Oiseau Voyageur
      }
    ]);

    console.log(`‚úÖ ${favorites.length} favoris cr√©√©s`);

    // Cr√©er des donn√©es de progr√®s
    console.log('üìä Cr√©ation des donn√©es de progr√®s...');
    
    // Calculer le d√©but de la semaine courante
    const now = new Date();
    const currentWeekStart = new Date(now);
    currentWeekStart.setDate(now.getDate() - now.getDay());
    currentWeekStart.setHours(0, 0, 0, 0);

    // Semaine pr√©c√©dente
    const previousWeekStart = new Date(currentWeekStart);
    previousWeekStart.setDate(currentWeekStart.getDate() - 7);

    const progressData = await Progress.insertMany([
      {
        userId: users[2]._id, // Emma
        weekStart: previousWeekStart,
        readingsCompleted: 2,
        totalTimeMinutes: 5.08,
        averageScore: 90.5,
        improvementPercentage: 0,
        weeklyGoal: 3,
        goalAchieved: false,
        streakDays: 2,
        bestScore: 92,
        worstScore: 89,
        totalMistakes: 1
      },
      {
        userId: users[3]._id, // Lucas
        weekStart: previousWeekStart,
        readingsCompleted: 2,
        totalTimeMinutes: 7.33,
        averageScore: 81.5,
        improvementPercentage: 0,
        weeklyGoal: 2,
        goalAchieved: true,
        streakDays: 2,
        bestScore: 85,
        worstScore: 78,
        totalMistakes: 3
      }
    ]);

    console.log(`‚úÖ ${progressData.length} entr√©es de progr√®s cr√©√©es`);

    console.log('üéâ Peuplement de la base de donn√©es termin√© avec succ√®s !');
    console.log('\nüìã R√©sum√© des donn√©es cr√©√©es :');
    console.log(`   - ${users.length} utilisateurs`);
    console.log(`   - ${poems.length} po√®mes`);
    console.log(`   - ${readings.length} lectures`);
    console.log(`   - ${favorites.length} favoris`);
    console.log(`   - ${progressData.length} entr√©es de progr√®s`);
    
    console.log('\nüîë Comptes de test :');
    console.log('   Admin: admin@app-educatif.com / admin123');
    console.log('   Enseignant: teacher@app-educatif.com / teacher123');
    console.log('   √âtudiant: emma.martin@student.com / student123');
    console.log('   √âtudiant: lucas.bernard@student.com / student123');

  } catch (error) {
    console.error('‚ùå Erreur lors du peuplement:', error);
    throw error;
  } finally {
    await mongoose.connection.close();
    console.log('üîí Connexion ferm√©e');
  }
};

// Ex√©cuter le script si appel√© directement
if (require.main === module) {
  seedDatabase()
    .then(() => {
      console.log('‚úÖ Script termin√© avec succ√®s');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Erreur du script:', error);
      process.exit(1);
    });
}

export default seedDatabase;
